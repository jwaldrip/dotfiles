{
  "name": "go-plus",
  "description": "Adds `gofmt`, `goimports`, `go vet`, `golint`, `go build` and `go test` functionality for the go language.",
  "keywords": [
    "go",
    "golang",
    "gofmt",
    "format",
    "fmt",
    "goimports",
    "gocode",
    "vet",
    "go fmt",
    "go vet"
  ],
  "version": "2.1.1",
  "main": "./lib/go-plus",
  "license": "Apache-2.0",
  "engines": {
    "atom": ">=0.143.0",
    "node": "*"
  },
  "author": {
    "name": "Joe Fitzgerald",
    "email": "jfitzgerald@gopivotal.com",
    "url": "http://github.com/joefitzgerald"
  },
  "homepage": "https://atom.io/packages/go-plus",
  "repository": {
    "type": "git",
    "url": "https://github.com/joefitzgerald/go-plus.git"
  },
  "bugs": {
    "url": "https://github.com/joefitzgerald/go-plus/issues"
  },
  "dependencies": {
    "async": ">=0.9.0",
    "atom-message-panel": ">=1.1.2",
    "emissary": "1.x",
    "fs-plus": "2.x",
    "glob": ">=4.0.6",
    "temp": ">=0.8.1",
    "underscore-plus": "1.x"
  },
  "readme": "# go-plus – Improved Go Experience In Atom\n\n[![OSX Build Status](https://travis-ci.org/joefitzgerald/go-plus.svg?branch=master)](https://travis-ci.org/joefitzgerald/go-plus)\n[![Windows Build status](https://ci.appveyor.com/api/projects/status/d0cekvaprt9wo1et)](https://ci.appveyor.com/project/joefitzgerald/go-plus)\n\nYou can install `go-plus` by opening Atom, going to `Preferences` > `Packages`, and searching for `go-plus`. Alternatively, run `apm install go-plus` in your terminal.\n\nThis package adds extra Atom functionality for the go language:\n\n* Formatting source using `gofmt`\n* Formatting and managing imports using `goimports`\n* Code quality inspection using `go vet`\n* Linting using `golint`\n* Syntax checking using `go build` and `go test`\n* Display of test coverage using `go test -coverprofile`\n\n### Example\n\n![A screenshot of go-plus in action](http://cl.ly/image/392z2L0f0E41/go-plus-example.gif)\n\n### Platforms\n\nThe package is currently known to work on OS X and Windows, and has CI jobs for those platforms.\n\n### Defaults\n\nBy default, the package has the following preferences enabled:\n\n* `Environment Overrides Configuration`: allow environment variables (e.g. `$GOPATH` or `%GOPATH%`) to override configured values (e.g. `Gopath`)\n* `Format On Save`: run `gofmt` or `goimports` on save\n* `Format With Go Imports`: use `goimports` instead of `gofmt`\n* `Get Missing Tools`: run `go get -u` on startup for all missing tools\n* `Lint On Save`: run `golint` on save\n* `Run Coverage On Save`: run `go test -coverprofile` & `cover` on save, and display coverage in the editor\n* `Show Panel`: show the message panel at the bottom of the screen if any errors or warnings are detected\n* `Syntax Check On Save`: run `go build` / `go test` on save to check for errors\n* `Vet On Save`: run `vet` on save to check for errors or warnings\n\nAdditionally, the following preferences can be optionally set:\n\n* `Golint Args`: specify the arguments that should be passed to `golint`\n* `Go Installation`: you should not need to specify this by default (!); allows you to specify a specific go installation instead of relying on inspection of the path and use of platform defaults\n* `Go Path`: this should usually be set in the environment, but you can specify your `GOPATH` here also to ensure Atom still works if you accidentally launch it via `Finder`, `Dock`, or `Spotlight` instead of the command line `atom` helper\n* `Show Panel When No Issues Exist`: show the message panel even if there are no errors or warnings\n* `Vet Args`: specify the arguments that should be passed to `vet`\n\nThe package will search the following locations (in order) for a `go` executable:\n\n* All directories specified in the PATH environment variable\n* OS X: `/usr/local/go/bin` (package installer)\n* OS X: `/usr/local/bin` (Homebrew)\n* Windows: `C:\\go\\bin` (package installer)\n\nIf you have go installed somewhere else, and *not available on the path*, specify the full path to the go executable in the `Go Installation` preference.\n\n### GOPATH\n\nLove it or hate it, `GOPATH` is very important in `go` land.\n\nSyntax checking requires a valid `GOPATH` for the files you are checking. You\ncan set your `GOPATH` using one of two mechanisms:\n\n* Using the environment: set the `$GOPATH` environment variable to the correct\n  value\n* Using `go-plus` preferences: set the `Go Path` preference\n\nThe environment (if set) is preferred over the `Go Path` preference by default.\nYou can change this by updating the `Environment Overrides Configuration`\npreference.\n\nThe most common reason `GOPATH` might not be set in the environment is due to the\nway OS X launches processes. When you launch Atom via processes created by\n`launchd` (e.g. using Finder, the Dock, or Spotlight) it likely will not have\naccess to your `$GOPATH` if you set it in your shell initialization files (e.g.\n`.bash_profile`, `.bashrc`, `.zshrc`, etc).\n\nConsider launching Atom via your shell – using the Atom Shell Commands – where\nAtom should inherit your environment. Alternatively, try one of the suggestions\nat http://apple.stackexchange.com/a/87283 to set the `GOPATH` for processes\nlaunched by `launchd` (and their children, which will include Atom).\n\nSetting the `Go Path` preference will ensure that you have a sensible fallback\nfor GOPATH if you have launched Atom without the `$GOPATH` environment variable\nset.\n\nIf both the `Go Path` preference and the `$GOPATH` / `%GOPATH%` environment variable are\nempty, `go-plus` will display a warning and will not perform `go build` / `go\ntest` powered syntax checking.\n\n### Planned Features\n\nThe following features will be added soon:\n\n* `gocode` integration ([#2](https://github.com/joefitzgerald/go-plus/issues/2))\n* `go oracle` / `godef` integration ([#11](https://github.com/joefitzgerald/go-plus/issues/11))\n* `godoc` integration ([#12](https://github.com/joefitzgerald/go-plus/issues/12))\n* ... and others: https://github.com/joefitzgerald/go-plus/issues\n\n### Contributors\n\n* Scott Barron [@rubyist](https://github.com/rubyist)\n    * Gofmt integration (https://github.com/atom/language-go/pull/3)\n    * Display test coverage (https://github.com/joefitzgerald/go-plus/pull/27)\n* Matt Aimonetti [@mattetti](https://github.com/mattetti) - Syntax checking (https://github.com/atom/language-go/pull/11)\n\n### Contributing\n\nContributions are greatly appreciated. Please fork this repository, make your\nchanges, and open a pull request. See [Contributing](https://github.com/joefitzgerald/go-plus/wiki/Contributing) for detailed instructions.\n",
  "readmeFilename": "README.md",
  "_id": "go-plus@2.1.1",
  "dist": {
    "shasum": "0635b0d302c515c98de045bfa2652311cd47d9c6"
  },
  "_resolved": "/private/var/folders/d6/4tvml8k17311jhjlyxvxs_rw0000gp/T/d-114108-31388-1mitko/package.tgz",
  "_from": "/private/var/folders/d6/4tvml8k17311jhjlyxvxs_rw0000gp/T/d-114108-31388-1mitko/package.tgz",
  "_atomModuleCache": {
    "version": 1,
    "dependencies": [
      {
        "name": "async",
        "version": "0.9.0",
        "path": "node_modules/async/lib/async.js"
      },
      {
        "name": "atom-message-panel",
        "version": "1.1.2",
        "path": "node_modules/atom-message-panel/lib/index.js"
      },
      {
        "name": "emissary",
        "version": "1.3.1",
        "path": "node_modules/emissary/lib/emissary.js"
      },
      {
        "name": "harmony-collections",
        "version": "0.3.7",
        "path": "node_modules/emissary/node_modules/harmony-collections/harmony-collections.js"
      },
      {
        "name": "mixto",
        "version": "1.0.0",
        "path": "node_modules/emissary/node_modules/mixto/lib/mixin.js"
      },
      {
        "name": "property-accessors",
        "version": "1.1.0",
        "path": "node_modules/emissary/node_modules/property-accessors/lib/property-accessors.js"
      },
      {
        "name": "harmony-collections",
        "version": "0.3.7",
        "path": "node_modules/emissary/node_modules/property-accessors/node_modules/harmony-collections/harmony-collections.js"
      },
      {
        "name": "fs-plus",
        "version": "2.3.1",
        "path": "node_modules/fs-plus/lib/fs-plus.js"
      },
      {
        "name": "async",
        "version": "0.2.10",
        "path": "node_modules/fs-plus/node_modules/async/lib/async.js"
      },
      {
        "name": "mkdirp",
        "version": "0.3.5",
        "path": "node_modules/fs-plus/node_modules/mkdirp/index.js"
      },
      {
        "name": "rimraf",
        "version": "2.2.8",
        "path": "node_modules/fs-plus/node_modules/rimraf/rimraf.js"
      },
      {
        "name": "glob",
        "version": "4.0.6",
        "path": "node_modules/glob/glob.js"
      },
      {
        "name": "graceful-fs",
        "version": "3.0.4",
        "path": "node_modules/glob/node_modules/graceful-fs/graceful-fs.js"
      },
      {
        "name": "inherits",
        "version": "2.0.1",
        "path": "node_modules/glob/node_modules/inherits/inherits.js"
      },
      {
        "name": "minimatch",
        "version": "1.0.0",
        "path": "node_modules/glob/node_modules/minimatch/minimatch.js"
      },
      {
        "name": "lru-cache",
        "version": "2.5.0",
        "path": "node_modules/glob/node_modules/minimatch/node_modules/lru-cache/lib/lru-cache.js"
      },
      {
        "name": "sigmund",
        "version": "1.0.0",
        "path": "node_modules/glob/node_modules/minimatch/node_modules/sigmund/sigmund.js"
      },
      {
        "name": "once",
        "version": "1.3.1",
        "path": "node_modules/glob/node_modules/once/once.js"
      },
      {
        "name": "wrappy",
        "version": "1.0.1",
        "path": "node_modules/glob/node_modules/once/node_modules/wrappy/wrappy.js"
      },
      {
        "name": "temp",
        "version": "0.8.1",
        "path": "node_modules/temp/lib/temp.js"
      },
      {
        "name": "rimraf",
        "version": "2.2.8",
        "path": "node_modules/temp/node_modules/rimraf/rimraf.js"
      },
      {
        "name": "underscore-plus",
        "version": "1.6.1",
        "path": "node_modules/underscore-plus/lib/underscore-plus.js"
      },
      {
        "name": "underscore",
        "version": "1.6.0",
        "path": "node_modules/underscore-plus/node_modules/underscore/underscore.js"
      }
    ],
    "extensions": {
      ".coffee": [
        "lib/dispatch.coffee",
        "lib/environment.coffee",
        "lib/executor.coffee",
        "lib/go-plus.coffee",
        "lib/go.coffee",
        "lib/gobuild.coffee",
        "lib/gocover/gocover-parser.coffee",
        "lib/gocover.coffee",
        "lib/goexecutable.coffee",
        "lib/gofmt.coffee",
        "lib/golint.coffee",
        "lib/gopath.coffee",
        "lib/govet.coffee",
        "lib/util/pathexpander.coffee",
        "lib/util/splicersplitter.coffee"
      ],
      ".json": [
        "node_modules/async/component.json",
        "node_modules/async/package.json",
        "node_modules/atom-message-panel/package.json",
        "node_modules/emissary/node_modules/harmony-collections/package.json",
        "node_modules/emissary/node_modules/mixto/package.json",
        "node_modules/emissary/node_modules/property-accessors/node_modules/harmony-collections/package.json",
        "node_modules/emissary/node_modules/property-accessors/package.json",
        "node_modules/emissary/package.json",
        "node_modules/fs-plus/node_modules/async/component.json",
        "node_modules/fs-plus/node_modules/async/package.json",
        "node_modules/fs-plus/node_modules/mkdirp/package.json",
        "node_modules/fs-plus/node_modules/rimraf/package.json",
        "node_modules/fs-plus/package.json",
        "node_modules/glob/node_modules/graceful-fs/package.json",
        "node_modules/glob/node_modules/inherits/package.json",
        "node_modules/glob/node_modules/minimatch/node_modules/lru-cache/package.json",
        "node_modules/glob/node_modules/minimatch/node_modules/sigmund/package.json",
        "node_modules/glob/node_modules/minimatch/package.json",
        "node_modules/glob/node_modules/once/node_modules/wrappy/package.json",
        "node_modules/glob/node_modules/once/package.json",
        "node_modules/glob/package.json",
        "node_modules/temp/node_modules/rimraf/package.json",
        "node_modules/temp/package.json",
        "node_modules/underscore-plus/node_modules/underscore/package.json",
        "node_modules/underscore-plus/package.json",
        "package.json"
      ],
      ".js": [
        "node_modules/async/lib/async.js",
        "node_modules/atom-message-panel/lib/LineMessageView.js",
        "node_modules/atom-message-panel/lib/MessagePanelView.js",
        "node_modules/atom-message-panel/lib/PlainMessageView.js",
        "node_modules/atom-message-panel/lib/index.js",
        "node_modules/atom-message-panel/lib/utils.js",
        "node_modules/emissary/lib/behavior.js",
        "node_modules/emissary/lib/emissary.js",
        "node_modules/emissary/lib/emitter.js",
        "node_modules/emissary/lib/helpers.js",
        "node_modules/emissary/lib/signal.js",
        "node_modules/emissary/lib/subscriber.js",
        "node_modules/emissary/lib/subscription.js",
        "node_modules/emissary/node_modules/harmony-collections/harmony-collections.js",
        "node_modules/emissary/node_modules/harmony-collections/harmony-collections.min.js",
        "node_modules/emissary/node_modules/mixto/lib/mixin.js",
        "node_modules/emissary/node_modules/property-accessors/lib/property-accessors.js",
        "node_modules/emissary/node_modules/property-accessors/node_modules/harmony-collections/harmony-collections.js",
        "node_modules/emissary/node_modules/property-accessors/node_modules/harmony-collections/harmony-collections.min.js",
        "node_modules/fs-plus/lib/fs-plus.js",
        "node_modules/fs-plus/node_modules/async/lib/async.js",
        "node_modules/fs-plus/node_modules/mkdirp/examples/pow.js",
        "node_modules/fs-plus/node_modules/mkdirp/index.js",
        "node_modules/fs-plus/node_modules/rimraf/bin.js",
        "node_modules/fs-plus/node_modules/rimraf/rimraf.js",
        "node_modules/glob/examples/g.js",
        "node_modules/glob/examples/usr-local.js",
        "node_modules/glob/glob.js",
        "node_modules/glob/node_modules/graceful-fs/fs.js",
        "node_modules/glob/node_modules/graceful-fs/graceful-fs.js",
        "node_modules/glob/node_modules/graceful-fs/polyfills.js",
        "node_modules/glob/node_modules/inherits/inherits.js",
        "node_modules/glob/node_modules/inherits/inherits_browser.js",
        "node_modules/glob/node_modules/inherits/test.js",
        "node_modules/glob/node_modules/minimatch/minimatch.js",
        "node_modules/glob/node_modules/minimatch/node_modules/lru-cache/lib/lru-cache.js",
        "node_modules/glob/node_modules/minimatch/node_modules/sigmund/bench.js",
        "node_modules/glob/node_modules/minimatch/node_modules/sigmund/sigmund.js",
        "node_modules/glob/node_modules/once/node_modules/wrappy/wrappy.js",
        "node_modules/glob/node_modules/once/once.js",
        "node_modules/temp/examples/grepcount.js",
        "node_modules/temp/examples/pdfcreator.js",
        "node_modules/temp/lib/temp.js",
        "node_modules/temp/no_cleanup.js",
        "node_modules/temp/no_cleanup_on_exit.js",
        "node_modules/temp/no_cleanup_on_exit.spec.js",
        "node_modules/temp/node_modules/rimraf/bin.js",
        "node_modules/temp/node_modules/rimraf/rimraf.js",
        "node_modules/underscore-plus/lib/underscore-plus.js",
        "node_modules/underscore-plus/node_modules/underscore/underscore-min.js",
        "node_modules/underscore-plus/node_modules/underscore/underscore.js"
      ]
    },
    "folders": [
      {
        "paths": [
          "lib",
          "lib/gocover",
          "lib/util",
          "",
          "spec",
          "spec/gocover",
          "spec/util"
        ],
        "dependencies": {
          "async": ">=0.9.0",
          "atom-message-panel": ">=1.1.2",
          "emissary": "1.x",
          "fs-plus": "2.x",
          "glob": ">=4.0.6",
          "temp": ">=0.8.1",
          "underscore-plus": "1.x"
        }
      },
      {
        "paths": [
          "node_modules/emissary/lib",
          "node_modules/emissary"
        ],
        "dependencies": {
          "underscore-plus": "1.x",
          "mixto": "1.x",
          "property-accessors": "^1.1"
        }
      },
      {
        "paths": [
          "node_modules/emissary/node_modules/property-accessors/lib",
          "node_modules/emissary/node_modules/property-accessors"
        ],
        "dependencies": {
          "mixto": "1.x"
        }
      },
      {
        "paths": [
          "node_modules/fs-plus/lib",
          "node_modules/fs-plus"
        ],
        "dependencies": {
          "underscore-plus": "1.x",
          "mkdirp": "~0.3.5",
          "rimraf": "~2.2.2",
          "async": "~0.2.9"
        }
      },
      {
        "paths": [
          "node_modules/glob/examples",
          "node_modules/glob",
          "node_modules/glob/test"
        ],
        "dependencies": {
          "graceful-fs": "^3.0.2",
          "inherits": "2",
          "minimatch": "^1.0.0",
          "once": "^1.3.0"
        }
      },
      {
        "paths": [
          "node_modules/glob/node_modules/minimatch",
          "node_modules/glob/node_modules/minimatch/test"
        ],
        "dependencies": {
          "lru-cache": "2",
          "sigmund": "~1.0.0"
        }
      },
      {
        "paths": [
          "node_modules/glob/node_modules/once",
          "node_modules/glob/node_modules/once/test"
        ],
        "dependencies": {
          "wrappy": "1"
        }
      },
      {
        "paths": [
          "node_modules/temp/examples",
          "node_modules/temp/lib",
          "node_modules/temp",
          "node_modules/temp/test"
        ],
        "dependencies": {
          "rimraf": "~2.2.6"
        }
      },
      {
        "paths": [
          "node_modules/underscore-plus/lib",
          "node_modules/underscore-plus"
        ],
        "dependencies": {
          "underscore": "~1.6.0"
        }
      }
    ]
  }
}